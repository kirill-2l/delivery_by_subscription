// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Visualize your schema  https://prismaliser.app/

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @unique @default(autoincrement())
  email       String   @unique
  name        String?
  hash        String
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime @default(now())
  active      Boolean  @default(true)
  locale      String?
  role        UserRole @default(USER)
  hashedRt    String?
  // store       Store?
  // categories  Category[]

  @@map("users")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String?
  price       Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  active      Boolean     @default(true)
  productType ProductType @default(REGULAR)
  store       Store       @relation(fields: [storeId], references: [id], onDelete: Cascade)
  storeId     Int
  // category    Category?   @relation(fields: [categoryId], references: [id])
  // categoryId  Int

  @@map("products")
}

model Store {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  active    Boolean   @default(true)
  // user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  // userId    Int       @unique
  products  Product[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  // products  Product[]

  @@map("categories")
}

enum ProductType {
  REGULAR
  EXTRA
}

enum UserRole {
  USER
  MANAGER
  ADMIN
}
