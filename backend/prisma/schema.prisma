// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String?
  hash    String
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime @default(now())
  active      Boolean @default(true)
  locale      String?
  role UserRole @default(USER)
  hashedRt String?
  products Product[]
  categories Category[]

  @@map("users")
}

model Product {
  id        String   @id @default(cuid())
  name      String?
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id])
  extraProducts ExtraProduct[]
  categoryId Int
  @@map("products")
}

model ExtraProduct {
  id Int @id @default(autoincrement())
  price Int
  name String
  products Product[]

}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  products Product[]
  @@map("categories")
}

enum UserRole {
  USER
  MANAGER
  ADMIN
}
